metatask_run_ens_post:
  var:
    mem: '{% if global.DO_ENSEMBLE %}{%- for m in range(1, global.NUM_ENS_MEMBERS+1) -%}{{ "%03d "%m }}{%- endfor -%} {% else %}{{ "000"|string }}{% endif %}'
  metatask_run_post_mem#mem#_all_fhrs:
    var:
      fhr: '{% for h in range(0, workflow.LONG_FCST_LEN+1) %}{{ " %03d" % h }}{% endfor %}'
      cycledef: '{% for h in range(0, workflow.LONG_FCST_LEN+1) %}{% if h <= workflow.FCST_LEN_CYCL|min %}forecast {% else %}long_forecast {% endif %}{% endfor %}'
    task_run_post_mem#mem#_f#fhr#:
      account: '&ACCOUNT;'
      attrs:
        cycledefs: '#cycledef#'
        maxtries: '2'
      command: !cycstr 'source &USHdir;/load_modules_wflow.sh hera ; python &SCRIPTSdir;/upp.py
        -c &GLOBAL_VAR_DEFNS_FP;
        --cycle @Y-@m-@dT@H:@M:@S
        --leadtime #fhr#:00:00
        --key-path task_run_post
        --mem #mem#'
      join: !cycstr '&LOGDIR;/{{ jobname }}_@Y@m@d@H&LOGEXT;'
      native: '{{ platform.SCHED_NATIVE_CMD }}'
      nodes: "{{ task_run_post.upp.execution.batchargs.nodes }}:ppn={{ task_run_post.upp.execution.batchargs.tasks_per_node }}"
      partition: '{% if platform.get("PARTITION_DEFAULT") %}&PARTITION_DEFAULT;{% else %}None{% endif %}'
      queue: '&QUEUE_DEFAULT;'
      walltime: '{{ task_run_post.upp.execution.batchargs.walltime }}'
      dependency:
        or:
          taskdep:
            attrs:
              task: run_fcst_mem#mem#
          and:
            datadep_dyn:
              text: !cycstr '&FCST_DIR;&SLASH_ENSMEM_SUBDIR;/dynf#fhr#.nc'
              attrs:
                age: '05:00'
            datadep_phy:
              text: !cycstr '&FCST_DIR;&SLASH_ENSMEM_SUBDIR;/phyf#fhr#.nc'
              attrs:
                age: '05:00'
