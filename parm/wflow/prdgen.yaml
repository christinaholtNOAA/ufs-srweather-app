metatask_run_prdgen:
  var:
    mem: '{% if global.DO_ENSEMBLE  %}{%- for m in range(1, global.NUM_ENS_MEMBERS+1) -%}{{ "%03d "%m }}{%- endfor -%} {% else %}{{ "000"|string }}{% endif %}'
  metatask_run_prdgen_hrs_mem#mem#:
    var:
      fhr: '{% for h in range(0, workflow.LONG_FCST_LEN+1) %}{{ " %03d" % h }}{% endfor %}'
      cycledef: '{% for h in range(0, workflow.LONG_FCST_LEN+1) %}{% if h <= workflow.FCST_LEN_HRS %}forecast {% else %}long_forecast {% endif %}{% endfor %}'
    task_run_prdgen_mem#mem#_f#fhr#:
      account: '&ACCOUNT;'
      attrs:
        cycledefs: '#cycledef#'
        maxtries: 1
      command: '&LOAD_MODULES_RUN_TASK; "run_prdgen" "&JOBSdir;/JREGIONAL_RUN_PRDGEN"'
      envars:
        GLOBAL_VAR_DEFNS_FP: '&GLOBAL_VAR_DEFNS_FP;'
        USHdir: '&USHdir;'
        PDY:
          cyclestr:
            value:  '@Y@m@d'
        cyc:
          cyclestr:
            value:  '@H'
        fhr: '#fhr#'
        SLASH_ENSMEM_SUBDIR: '&SLASH_ENSMEM_SUBDIR;'
        ENSMEM_INDX: '#mem#'
        nprocs: '{{ task_run_prdgen.execution.nodes * task_run_prdgen.execution.cores }}'
      join:
        cyclestr:
          value:  '&LOGDIR;/{{ jobname }}_@Y@m@d@H&LOGEXT;'
      native: '{{ platform.SCHED_NATIVE_CMD }}'
      nodes: '{{ task_run_prdgen.execution.nodes }}:ppn={{ task_run_prodgen.execution.cores }}'
      partition: '{{ "&PARTITION_DEFAULT;" if platform.get("PARTITION_DEFAULT") else "None" }}'
      queue: '&QUEUE_DEFAULT;'
      dependency:
        taskdep:
          attrs:
            task: run_post_mem#mem#_f#fhr#
