default_aqm_task: &default_aqm
  account: '&ACCOUNT;'
  attrs:
    cycledefs: forecast
    maxtries: '2'
  envars: &default_vars
    GLOBAL_VAR_DEFNS_FP: '&GLOBAL_VAR_DEFNS_FP;'
    HOMEdir: '&HOMEdir;'
    envir: '&envir;'
    model_ver: '&model_ver;'
    KEEPDATA: '&KEEPDATA;'
    SENDCOM: '&SENDCOM;'
    COMROOT: '&COMROOT;'
    DATAROOT: '&DATAROOT;'
    DCOMROOT: '&DCOMROOT;'
    LOGDIR:
      cyclestr:
        value:  "&LOGDIR;"
    PDY:
      cyclestr:
        value:  "@Y@m@d"
    cyc:
      cyclestr:
        value:  "@H"
    nprocs: '{{ parent.nnodes * parent.ppn // 1 }}'
    subcyc:
      cyclestr:
        value:  "@M"
    SLASH_ENSMEM_SUBDIR: '&SLASH_ENSMEM_SUBDIR;'
  native: '{{ platform.SCHED_NATIVE_CMD }}'
  partition: '{{ "&PARTITION_DEFAULT;" if platform.get("PARTITION_DEFAULT") else "" }}'
  queue: '&QUEUE_DEFAULT;'

task_nexus_gfs_sfc:
  <<: *default_aqm
  command: '&LOAD_MODULES_RUN_TASK; "nexus_gfs_sfc" "&HOMEdir;/jobs/JSRW_NEXUS_GFS_SFC"'
  native: '{% if platform.get("SCHED_NATIVE_CMD_HPSS") %}{{ platform.SCHED_NATIVE_CMD_HPSS }}{% else %}{{ platform.SCHED_NATIVE_CMD}}{% endif %}'
  partition: '{{ "&PARTITION_HPSS;" if platform.get("PARTITION_HPSS") else "" }}'
  join:
    cyclestr:
      value:  '&LOGDIR;/{{ jobname }}_@Y@m@d@H&LOGEXT;'
  envars:
    <<: *default_vars
    nprocs: '{{ task_nexus_gfs_sfc.execution.cores }}'
  cores: !int '{{ task_nexus_gfs_sfc.execution.cores }}'
  walltime: '{{ task_nexus_gfs_sfc.execution.walltime }}'
  memory: 2G
  dependency:
    or:
      and:
        streq:
          left: do_real_time
          right: '{% if workflow.DO_REAL_TIME %}do_real_time{% endif %}'
        datadep_gfs:
          attrs:
            age: 00:00:00:05
          value:
            cyclestr:
              attrs:
                offset: "-{{ workflow.INCR_CYCL_FREQ }}:00:00"
              value: '&COMINgfs;/gfs.@Y@m@d/@H/atmos'
      streq:
        left: retro
        right: '{% if not workflow.DO_REAL_TIME %}retro{% endif %}'

metatask_nexus_emission:
  var:
    nspt: '{% for h in range(0, cpl_aqm_parm.NUM_SPLIT_NEXUS) %}{{ " %02d" % h }}{% endfor %}'
  task_nexus_emission_#nspt#:
    <<: *default_aqm
    command: '&LOAD_MODULES_RUN_TASK; "nexus_emission" "&HOMEdir;/jobs/JSRW_NEXUS_EMISSION"'
    join:
      cyclestr:
        value:  '&LOGDIR;/{{ jobname }}_@Y@m@d@H&LOGEXT;'
    nodes: '{{ task_nexus_emission.NNODES_NEXUS_EMISSION }}:ppn={{ task_nexus_emission.PPN_NEXUS_EMISSION }}'
    walltime: '{{ task_nexus_emission.WALLTIME_NEXUS_EMISSION }}'
    envars:
      <<: *default_vars
      nspt: "#nspt#"
      nprocs: '{{ task_nexus_emission.NNODES_NEXUS_EMISSION * task_nexus_emission.PPN_NEXUS_EMISSION }}'
    dependency:
      taskdep:
        attrs:
          task: nexus_gfs_sfc

task_nexus_post_split:
  <<: *default_aqm
  command: '&LOAD_MODULES_RUN_TASK; "nexus_post_split" "&HOMEdir;/jobs/JSRW_NEXUS_POST_SPLIT"'
  join:
    cyclestr:
      value:  '&LOGDIR;/{{ jobname }}_@Y@m@d@H&LOGEXT;'
  envars:
    <<: *default_vars
    nprocs: '{{ task_nexus_post_split.execution.cores }}'
  cores: !int '{{ task_nexus_post_split.execution.cores }}'
  walltime: '{{ task_nexus_post_split.execution.walltime }}'
  dependency:
    metataskdep:
      attrs:
        metatask: nexus_emission

task_fire_emission:
  <<: *default_aqm
  command: '&LOAD_MODULES_RUN_TASK; "fire_emission" "&HOMEdir;/jobs/JSRW_FIRE_EMISSION"'
  join:
    cyclestr:
      value:  '&LOGDIR;/{{ jobname }}_@Y@m@d@H&LOGEXT;'
  memory: 2G
  envars:
    <<: *default_vars
    nprocs: '{{ task_fire_emission.execution.cores }}'
  cores: !int '{{ task_fire_emission.execution.cores }}'
  walltime: '{{ task_fire_emission.execution.walltime }}'

task_point_source:
  <<: *default_aqm
  command: '&LOAD_MODULES_RUN_TASK; "point_source" "&HOMEdir;/jobs/JSRW_POINT_SOURCE"'
  join:
    cyclestr:
      value:  '&LOGDIR;/{{ jobname }}_@Y@m@d@H&LOGEXT;'
  envars:
    <<: *default_vars
    nprocs: '{{ task_point_source.execution.cores }}'
  cores: !int '{{ task_point_source.execution.cores }}'
  walltime: '{{ task_point_source.execution.walltime }}'
  dependency:
    or_make_grid:
      datadep_grid:
        attrs:
          age: 00:00:00:05
        value: '{{ task_make_grid.GRID_DIR }}/make_grid_task_complete.txt'
      streq:
        left: staged_grid
        right: '{{ "staged_grid" if not rocoto.get("tasks", {}).get("task_make_grid") }}'

task_aqm_ics_ext:
  <<: *default_aqm
  attrs:
    cycledefs: at_start
    maxtries: '2'
  command: '&LOAD_MODULES_RUN_TASK; "aqm_ics" "&HOMEdir;/jobs/JSRW_AQM_ICS"'
  envars:
    <<: *default_vars
    PREV_CYCLE_DIR: '&WARMSTART_CYCLE_DIR;'
    nprocs: '{{ task_aqm_ics_ext.execution.cores }}'
  join:
    cyclestr:
      value:  '&LOGDIR;/{{ jobname }}_@Y@m@d@H&LOGEXT;'
  cores: !int '{{ task_aqm_ics_ext.execution.cores }}'
  walltime: '{{ task_aqm_ics_ext.execution.walltime }}'
  memory: 64G
  dependency:
    and:
      taskdep:
        attrs:
          task: make_ics_mem000
      or:
        datadep_date_tag_tracer:
          attrs:
            age: 00:00:00:05
          value:
      cyclestr:
        value:  '&WARMSTART_CYCLE_DIR;/RESTART/@Y@m@d.@H@M@S.fv_tracer.res.tile1.nc'
        datadep_tracer:
          attrs:
            age: 00:00:00:05
          value:
      cyclestr:
        value:  '&WARMSTART_CYCLE_DIR;/RESTART/fv_tracer.res.tile1.nc'

task_aqm_ics:
  <<: *default_aqm
  attrs:
    cycledefs: cycled_from_second
    maxtries: '2'
  command: '&LOAD_MODULES_RUN_TASK; "aqm_ics" "&HOMEdir;/jobs/JSRW_AQM_ICS"'
  envars:
    <<: *default_vars
    PREV_CYCLE_DIR:
      cyclestr:
        attrs:
          offset: "-{{ workflow.INCR_CYCL_FREQ }}:00:00"
        value: '&COMIN_DIR;'
    nprocs: '{{ task_aqm_ics.execution.cores }}'
  join:
    cyclestr:
      value:  '&LOGDIR;/{{ jobname }}_@Y@m@d@H&LOGEXT;'
  cores: !int '{{ task_aqm_ics.execution.cores }}'
  walltime: '{{ task_aqm_ics.execution.walltime }}'
  memory: 64G
  dependency:
    and:
      taskdep:
        attrs:
          task: make_ics_mem000
      or:
        datadep_date_tag_tracer:
          attrs:
            age: 00:00:00:05
          value:
            - cyclestr:
                attrs:
                  offset: "-{{ workflow.INCR_CYCL_FREQ }}:00:00"
                value: '&COMIN_DIR;/RESTART/'
            - cyclestr:
                value: '@Y@m@d.@H@M@S.fv_tracer.res.tile1.nc'
        datadep_tracer:
          attrs:
            age: 00:00:00:05
          value:
            cyclestr:
              attrs:
                offset: "-{{ workflow.INCR_CYCL_FREQ }}:00:00"
              value: '&COMIN_DIR;/RESTART/fv_tracer.res.tile1.nc'

task_aqm_lbcs:
  <<: *default_aqm
  command: '&LOAD_MODULES_RUN_TASK; "aqm_lbcs" "&HOMEdir;/jobs/JSRW_AQM_LBCS"'
  join:
      cyclestr:
        value:  '&LOGDIR;/{{ jobname }}_@Y@m@d@H&LOGEXT;'
  envars:
    <<: *default_vars
    nprocs: '{{ task_aqm_lbcs.execution.nodes * task_aqm_lbcs.execution.cores }}'
  nodes: '{{ task_aqm_lbcs.execution.nodes }}:ppn={{ task_aqm_lbcs.execution.cores }}'
  dependency:
    taskdep:
      attrs:
        task: make_lbcs_mem000

